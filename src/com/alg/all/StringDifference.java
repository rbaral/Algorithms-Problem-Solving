/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.alg.leetcode;

/**
 *Given two strings s and t which consist of only lowercase letters.

String t is generated by random shuffling string s and then add one more letter at a random position.

Find the letter that was added in t.
* Example:

Input:
s = "abcd"
t = "abcde"

Output:
e

Explanation:
'e' is the letter that was added.
* 
* 
* Solution:
* 1) The brute force solution is to compare one by one using nested loops and if one of the character is not found in the other then this is the solution
* It requires quadratic time (O(n^2)).
* 
 * @author rbaral
 */
 
import java.util.Map;
import java.util.HashMap;

public class StringDifference {
    
	static char findTheDifference(String a, String b){
		Map <String,Integer> countMap = new HashMap<String,Integer>();
		char[] s1 = a.toCharArray();
		char[] s2 = b.toCharArray();
		int j = 0; //for s2
		for(int i=0; i<s1.length;i++){
			if(countMap.containsKey(String.valueOf(s1[i]))){
				countMap.put(String.valueOf(s1[i]), countMap.get(String.valueOf(s1[i]))+1);
			}else{
				countMap.put(String.valueOf(s1[i]), 1);
			}
			if(j<s2.length){
				if(countMap.containsKey(String.valueOf(s2[j]))){
					countMap.put(String.valueOf(s2[j]), countMap.get(String.valueOf(s2[j]))-1);
				}else{
					countMap.put(String.valueOf(s2[j]), -1);
				}
				j++;
			}
		}
		
		//check if we are done with s2
		while(j<s2.length){
			if(countMap.containsKey(String.valueOf(s2[j]))){
				countMap.put(String.valueOf(s2[j]), countMap.get(String.valueOf(s2[j]))-1);
			}else{
				countMap.put(String.valueOf(s2[j]), -1);
			}
			j++;
		}
		
		//now whichever char has value -1 will be the desired one
		String diff="";
		for(String d:countMap.keySet()){
			if(countMap.get(d)==-1){
				diff = d;
				break;
			}
				
		}
		return diff.charAt(0);
	}
        //we just store the count of a character using the array of size 26
        static char findTheDifferenceCount(String a, String b){
            int chars[] = new int[26];
            char[] s1 = a.toCharArray();
            char[] s2 = b.toCharArray();
            int j = 0; //for s2
            for(int i=0; i<s1.length;i++){
                    chars[Integer.valueOf(s1[i])-'a']+=1;
                    if(j<s2.length){
                            chars[Integer.valueOf(s2[j])-'a']-=1;
                            j++;
                    }
            }
            while(j<s2.length){
                    chars[Integer.valueOf(s2[j])-'a']-=1;
                    j++;
            }
            char diff='-';
            //now in the chars array, whichever index has value non-zero is the diff char
            for(int i=0;i<chars.length;i++){
                    if(chars[i]!=0){
                            diff = (char)('a'+i);
                            break;
                    }
            }
            return diff;
        }
        
	
	public static void main(String args[]){
		String a ="abcd";
		String b = "abcde";
		System.out.println(""+findTheDifference(a,b));
                System.out.println(""+findTheDifferenceCount(a,b));
	}
}
