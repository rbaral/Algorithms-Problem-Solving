/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.alg.leetcode;

/**
 *Given an integer n, return the number of trailing zeroes in n!.

Note: Your solution should be in logarithmic time complexity.
* 
* 
* Solution1:
* 
* 0's are generated by the multiples of 5s. So we just count the number of occurrences of 5s in n.
* The number of 5s in n is the number of 0s generated by n!.
* 
* 
 * @author rbaral
 */
public class FactorialTrailingZeros {
    public static int trailingZeroes(int n) {
        if(n<5){
            return 0;
        }else if(n==5){
            return 1;
        }else{
            return n/5 + trailingZeroes(n/5);
        }
    }
    
    public static void main(String args[]){
        System.out.println(trailingZeroes(1808548329));
    }
}
